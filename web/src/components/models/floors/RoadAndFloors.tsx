/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/floors/RoadAndFloors.glb -o src/components/models/floors/RoadAndFloors.tsx -s -k -r public/ 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Floor004: THREE.Mesh
    Floor007: THREE.Mesh
    Floor006: THREE.Mesh
    Floor005: THREE.Mesh
    Floor003: THREE.Mesh
    Floor002: THREE.Mesh
    Floor009: THREE.Mesh
    Floor016: THREE.Mesh
    Floor011: THREE.Mesh
    Road: THREE.Mesh
    Floor008: THREE.Mesh
    Floor001: THREE.Mesh
    Floor010: THREE.Mesh
    Floor: THREE.Mesh
    Floor012: THREE.Mesh
    Road001: THREE.Mesh
    Floor013: THREE.Mesh
    Floor014: THREE.Mesh
    Floor015: THREE.Mesh
  }
  materials: {
    Base: THREE.MeshStandardMaterial
    Road: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function RoadAndFloors(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/floors/RoadAndFloors.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh name="Floor004" receiveShadow geometry={nodes.Floor004.geometry} material={materials.Base} position={[-15.962, 0, -19.689]} scale={[1, 1, 0.86]} />
      <mesh name="Floor007" receiveShadow geometry={nodes.Floor007.geometry} material={materials.Base} position={[-16.015, 0.265, 4.162]} />
      <mesh name="Floor006" receiveShadow geometry={nodes.Floor006.geometry} material={materials.Base} />
      <mesh name="Floor005" receiveShadow geometry={nodes.Floor005.geometry} material={materials.Base} position={[15.502, 0, -0.258]} />
      <mesh name="Floor003" receiveShadow geometry={nodes.Floor003.geometry} material={materials.Base} position={[0, 0, -15.966]} />
      <mesh name="Floor002" receiveShadow geometry={nodes.Floor002.geometry} material={materials.Base} position={[15.502, 0, -50.588]} />
      <mesh name="Floor009" receiveShadow geometry={nodes.Floor009.geometry} material={materials.Base} position={[15.502, 0, 31.471]} />
      <mesh name="Floor016" receiveShadow geometry={nodes.Floor016.geometry} material={materials.Base} position={[15.502, 0, 15.661]} />
      <mesh name="Floor011" receiveShadow geometry={nodes.Floor011.geometry} material={materials.Base} position={[-6.82, 0, 47.63]} />
      <mesh name="Road" receiveShadow geometry={nodes.Road.geometry} material={materials.Road} />
      <mesh name="Floor008" receiveShadow geometry={nodes.Floor008.geometry} material={materials.Base} position={[15.381, 0, -34.414]} />
      <mesh name="Floor001" receiveShadow geometry={nodes.Floor001.geometry} material={materials.Base} position={[-31.993, 0.568, -58.068]} />
      <mesh name="Floor010" receiveShadow geometry={nodes.Floor010.geometry} material={materials.Base} position={[-0.394, 0, 31.471]} />
      <mesh name="Floor" receiveShadow geometry={nodes.Floor.geometry} material={materials.Base} position={[15.502, 0, 47.63]} />
      <mesh name="Floor012" receiveShadow geometry={nodes.Floor012.geometry} material={materials.Base} position={[4.548, -0.115, -63.541]} />
      <mesh name="Road001" receiveShadow geometry={nodes.Road001.geometry} material={materials.Base} position={[0, -4.519, -0.108]} rotation={[0, 0, -Math.PI]} scale={[-25.869, -11.423, -56.849]} />
      <mesh name="Floor013" receiveShadow geometry={nodes.Floor013.geometry} material={materials.Base} position={[48.112, 0, 67.887]} />
      <mesh name="Floor014" receiveShadow geometry={nodes.Floor014.geometry} material={materials.Base} position={[70.946, 0, 67.887]} />
      <mesh name="Floor015" receiveShadow geometry={nodes.Floor015.geometry} material={materials.Base} position={[48.112, 0, 47.759]} />
    </group>
  )
}

useGLTF.preload('/models/floors/RoadAndFloors.glb')

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/vehicles/Bus.glb -o src/components/models/Bus.tsx -r public/ 
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Plane124: THREE.Mesh
    Plane124_1: THREE.Mesh
  }
  materials: {
    Primary: THREE.MeshStandardMaterial
    Base: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ActionName = 'Bus'
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}
type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Bus(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/models/vehicles/Bus.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  useEffect(() => {
    actions['Bus'].play()
    return () => {
      actions['Bus'].stop()
    }
  }, []);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Bus" position={[-8.313, 0.827, -9.488]}>
          <mesh name="Plane124" geometry={nodes.Plane124.geometry} material={materials.Primary} castShadow />
          <mesh name="Plane124_1" geometry={nodes.Plane124_1.geometry} material={materials.Base} castShadow />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/vehicles/Bus.glb')

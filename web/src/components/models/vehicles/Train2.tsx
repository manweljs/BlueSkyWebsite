/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/vehicles/Train.glb -o src/components/models/vehicles/Train2.tsx -s -k -r public/ 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Plane099: THREE.Mesh
    Plane099_1: THREE.Mesh
  }
  materials: {
    Base: THREE.MeshStandardMaterial
    Glass: THREE.MeshPhysicalMaterial
  }
  animations: GLTFAction[]
}

type ActionName = 'Train.001'
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}
type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/models/vehicles/Train.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Train001" position={[26.793, 0.529, -86.874]} rotation={[-0.001, 0, -0.014]} scale={0.596}>
          <mesh name="Plane099" castShadow receiveShadow geometry={nodes.Plane099.geometry} material={materials.Base} />
          <mesh name="Plane099_1" castShadow receiveShadow geometry={nodes.Plane099_1.geometry} material={materials.Glass} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/vehicles/Train.glb')

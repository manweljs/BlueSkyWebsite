/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/buildings/TrainGate.glb -o src/components/models/buildings/TrainGate.tsx -r public/ 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Plane135: THREE.Mesh
    Plane135_1: THREE.Mesh
    Plane254: THREE.Mesh
    Plane254_1: THREE.Mesh
  }
  materials: {
    Primary: THREE.MeshStandardMaterial
    Base: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function TrainGate(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/buildings/TrainGate.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[27.612, -0.308, 69.12]} rotation={[0, 0, -Math.PI]} scale={[-1.886, -1, -1.662]}>
        <mesh geometry={nodes.Plane135.geometry} material={materials.Primary} />
        <mesh geometry={nodes.Plane135_1.geometry} material={materials.Base} />
      </group>
      <group position={[27.612, -0.308, -76.224]} rotation={[-Math.PI, 0, 0]} scale={[-2.269, -1, -1.662]}>
        <mesh geometry={nodes.Plane254.geometry} material={materials.Primary} />
        <mesh geometry={nodes.Plane254_1.geometry} material={materials.Base} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/buildings/TrainGate.glb')

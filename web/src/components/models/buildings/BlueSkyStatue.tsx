/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/buildings/BlueSkyStatue.glb -o src/components/models/buildings/BlueSkyStatue.tsx -k -s -r public/ 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { materials } from '@/consts/materials'
import { useFrame } from '@react-three/fiber'
import { useUserContext } from '@/context/UserContext'

type GLTFResult = GLTF & {
  nodes: {
    Circle005: THREE.Mesh
    Circle005_1: THREE.Mesh
    Circle005_2: THREE.Mesh
    Circle005_3: THREE.Mesh
  }
  materials: {
    LogoBlue: THREE.MeshStandardMaterial
    ['Base.001']: THREE.MeshStandardMaterial
    ['Window.001']: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function BlueSkyStatue(props: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/models/buildings/BlueSkyStatue.glb') as GLTFResult
  const logoRef = useRef(null)
  const circleRef = useRef(null)

  const { isNight, quality } = useUserContext()

  useFrame((state, delta) => {
    if (logoRef.current && circleRef.current) {
      logoRef.current.rotation.y += delta * -2
      circleRef.current.rotation.y += delta * 1
    }
  })

  return (
    <group {...props} dispose={null}>
      <group name="MainStatue" position={[-0.002, 0.811, -1.151]}>
        <mesh ref={logoRef}
          scale={1.2}
          position={[0, -.05, 0]}
          name="Circle005" castShadow geometry={nodes.Circle005.geometry} material={materials.Logo} />
        <mesh ref={circleRef}
          scale={1.2}
          name="Circle005_3" castShadow geometry={nodes.Circle005_3.geometry} material={materials.Base} />
        <mesh name="Circle005_1" castShadow geometry={nodes.Circle005_1.geometry} material={materials.Base} />
        <mesh
          position={[0, -0.05, 0]}
          name="Circle005_2" receiveShadow geometry={nodes.Circle005_2.geometry} material={materials.Water} />
      </group>
      {isNight && quality > 1 &&
        <pointLight
          position={[0, 4.5, -1]}
          color="#acdaff"
          intensity={5}
          distance={5}
          decay={2}
        />
      }
    </group>
  )
}

useGLTF.preload('/models/buildings/BlueSkyStatue.glb')

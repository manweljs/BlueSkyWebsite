/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/texts/Text001.glb -o src/components/models/texts/Text001.tsx -s -k -r public/ 
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGLTF, useHelper } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { materials } from '@/consts/materials'
import { useUserContext } from '@/context/UserContext'

type GLTFResult = GLTF & {
  nodes: {
    TextBlueSkyCreation: THREE.Mesh
    textlamp: THREE.Mesh
    textlamp001: THREE.Mesh
  }
  materials: {
    Base: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

const lightColor = "#acdaff";
const lightIntensity = 1.5;

export function Text001(props: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/models/texts/Text001.glb') as GLTFResult
  const { isNight } = useUserContext()
  const spotlightRef = useRef(null);
  const spotlight2Ref = useRef(null);


  useEffect(() => {
    if (spotlightRef.current) {
      spotlightRef.current.target.position.set(-100, 40, -10);
      spotlight2Ref.current.target.position.set(-81, 25, -70);
      spotlightRef.current.target.updateMatrixWorld();
      spotlight2Ref.current.target.updateMatrixWorld();
    }
  }, [spotlightRef.current]);


  return (
    <group {...props} dispose={null}>
      <mesh name="TextBlueSkyCreation" castShadow geometry={nodes.TextBlueSkyCreation.geometry} material={materials.Base} position={[-64.903, 9.534, -32.665]} />
      <mesh name="textlamp" castShadow geometry={nodes.textlamp.geometry} material={materials.Base}
        position={[-55.702, 7.116, -24.879]} scale={0.067} />
      <mesh name="textlamp001" castShadow geometry={nodes.textlamp001.geometry} material={materials.Base}
        position={[-55.265, 7.13, -26.483]} rotation={[0, Math.PI / 4, 0]} scale={0.067} />
      <spotLight
        ref={spotlightRef}
        position={[-55.702, 7.2, -24.879]}
        intensity={isNight ? lightIntensity : 0}
        angle={Math.PI / 3}
        penumbra={0.2}
        decay={0}
        distance={40}
        color={lightColor}
      />
      <spotLight
        ref={spotlight2Ref}
        position={[-55, 7.2, -26]}
        intensity={isNight ? lightIntensity : 0}
        angle={Math.PI / 3}
        penumbra={0.2}
        decay={0}
        distance={40}
        color={lightColor}
      />
    </group>
  )
}

useGLTF.preload('/models/texts/Text001.glb')
